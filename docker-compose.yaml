services:
  mockyend-db:
    image: 'postgres:latest'
    container_name: mockyend-db
    environment:
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: ${APP_DB_NAME}
    ports:
      - "${APP_DB_PORT}:5432"
    volumes:
      - mockyend-postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    networks:
      - mockyend-net
    command: >
      -p 5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=${APP_DB_USER}",
          "--host=localhost",
          "--port=5432",
          "--dbname=${APP_DB_NAME}"
        ]
      interval: 1s
      retries: 3

  mockyend-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mockyend-server
    env_file: .env
    ports:
      - "${APP_HTTP_PORT}:8000"
    command: [ "poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0",
                  "--port", "8000", "--workers", "1", "--no-access-log", "--reload" ]
    volumes:
      - "./app:/home/appuser/app:delegated"
      - "./db:/home/appuser/db:delegated"
      - "./tests:/home/appuser/tests:delegated"
      - "./pyproject.toml:/home/appuser/pyproject.toml:delegated"
      - "./poetry.lock:/home/appuser/poetry.lock:delegated"
    networks:
      - mockyend-net
    depends_on:
      - mockyend-db

volumes:
  mockyend-postgres-data:

networks:
  mockyend-net:
    driver: bridge
